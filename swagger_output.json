{
  "swagger": "2.0",
  "info": {
    "title": "4Foods API",
    "description": "API documentation for 4Foods Android app",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer <token>**"
    }
  },
  "paths": {
    "/auth/register/request-otp": {
      "post": {
        "tags": ["Auth"],
        "summary": "Request OTP for email verification during registration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email"],
              "properties": {
                "email": { "type": "string", "example": "triet@example.com" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "OTP sent successfully"
                }
              }
            }
          },
          "400": {
            "description": "Email is required",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Email is required" }
              }
            }
          }
        }
      }
    },
    "/auth/register/verify-otp": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify OTP and create new user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["name", "email", "password", "otp"],
              "properties": {
                "name": { "type": "string", "example": "Triet Do" },
                "email": { "type": "string", "example": "triet@example.com" },
                "password": { "type": "string", "example": "123456" },
                "role": { "type": "string", "example": "customer" },
                "otp": { "type": "string", "example": "123456" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Account created successfully"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "64f1abc1234567" },
                    "email": {
                      "type": "string",
                      "example": "triet@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Invalid OTP" }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login with email and password",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": { "type": "string", "example": "triet@example.com" },
                "password": { "type": "string", "example": "123456" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login success",
            "schema": {
              "type": "object",
              "properties": {
                "token": { "type": "string", "example": "<jwt-token>" }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Invalid credentials" }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Send password reset code via email",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email"],
              "properties": {
                "email": { "type": "string", "example": "triet@example.com" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset code sent",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Reset code sent" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "User not found" }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset password using code",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "code", "newPassword"],
              "properties": {
                "email": { "type": "string", "example": "triet@example.com" },
                "code": { "type": "string", "example": "1a2b3c" },
                "newPassword": { "type": "string", "example": "newpass123" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Password updated" }
              }
            }
          },
          "400": {
            "description": "Invalid or expired code",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid or expired code"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current logged-in user info",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "User profile returned",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1abc1234567" },
                "name": { "type": "string", "example": "Triet Do" },
                "email": { "type": "string", "example": "triet@example.com" },
                "phone": { "type": "string", "example": "0123456789" },
                "avatar": { "type": "string", "example": "https://..." },
                "role": { "type": "string", "example": "customer" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update current user info",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Triet Do" },
                "email": { "type": "string", "example": "triet@example.com" },
                "phone": { "type": "string", "example": "0123456789" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated user info",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1abc1234567" },
                "name": { "type": "string", "example": "Triet Do" },
                "email": { "type": "string", "example": "triet@example.com" },
                "phone": { "type": "string", "example": "0123456789" },
                "avatar": { "type": "string", "example": "https://..." },
                "role": { "type": "string", "example": "customer" }
              }
            }
          }
        }
      }
    },
    "/users/me/avatar": {
      "put": {
        "tags": ["Users"],
        "summary": "Update avatar image",
        "consumes": ["multipart/form-data"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "formData",
            "name": "avatar",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar updated",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Avatar updated" },
                "avatar": {
                  "type": "string",
                  "example": "https://.../avatar.jpg"
                }
              }
            }
          }
        }
      }
    },
    "/users/change-password": {
      "put": {
        "tags": ["Users"],
        "summary": "Change password",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": { "type": "string", "example": "123456" },
                "newPassword": { "type": "string", "example": "newpass123" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password updated successfully"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users (Admin only)",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "64f1abc1234567" },
                  "name": { "type": "string", "example": "Triet Do" },
                  "email": { "type": "string", "example": "triet@example.com" },
                  "role": { "type": "string", "example": "customer" }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID (Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1abc1234567" },
                "name": { "type": "string", "example": "Triet Do" },
                "email": { "type": "string", "example": "triet@example.com" },
                "role": { "type": "string", "example": "customer" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user by ID (Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "phone": { "type": "string" },
                "role": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1abc1234567" },
                "name": { "type": "string", "example": "Triet Do" },
                "email": { "type": "string", "example": "triet@example.com" },
                "role": { "type": "string", "example": "customer" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user by ID (Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User deleted" }
              }
            }
          }
        }
      }
    },
    "/categories/": {
      "post": {
        "tags": ["Categories"],
        "summary": "Create a new category (Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "required": ["name"],
              "properties": {
                "name": { "type": "string", "example": "Beverages" },
                "description": { "type": "string", "example": "All drinks" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1cde1234567" },
                "name": { "type": "string", "example": "Beverages" },
                "description": { "type": "string", "example": "All drinks" },
                "createdAt": {
                  "type": "string",
                  "example": "2025-10-20T06:12:34.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Category name already exists",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Category name already exists"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "List of categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "64f1cde1234567" },
                  "name": { "type": "string", "example": "Beverages" },
                  "description": { "type": "string", "example": "All drinks" }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get category by ID",
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Category detail",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1cde1234567" },
                "name": { "type": "string", "example": "Beverages" },
                "description": { "type": "string", "example": "All drinks" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update category by ID (Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Snacks" },
                "description": {
                  "type": "string",
                  "example": "Updated description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1cde1234567" },
                "name": { "type": "string", "example": "Snacks" },
                "description": {
                  "type": "string",
                  "example": "Updated description"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete category by ID (Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Category deleted",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Category deleted" }
              }
            }
          }
        }
      }
    },
    "/loyalty/me": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Get current user’s loyalty points",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of loyalty points for the current user",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "64f1loyal1234567" },
                  "user": { "type": "string", "example": "64f1abc1234567" },
                  "shop": {
                    "type": "object",
                    "properties": {
                      "_id": { "type": "string", "example": "64f1shop1234567" },
                      "name": { "type": "string", "example": "Coffee Shop" },
                      "email": {
                        "type": "string",
                        "example": "coffee@example.com"
                      }
                    }
                  },
                  "points": { "type": "number", "example": 120 }
                }
              }
            }
          }
        }
      }
    },
    "/loyalty/": {
      "get": {
        "tags": ["Loyalty"],
        "summary": "Get all loyalty records (Admin only)",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of all loyalty records",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "64f1loyal1234567" },
                  "user": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "example": "Triet Do" },
                      "email": {
                        "type": "string",
                        "example": "triet@example.com"
                      }
                    }
                  },
                  "shop": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "example": "Coffee Shop" },
                      "email": {
                        "type": "string",
                        "example": "coffee@example.com"
                      }
                    }
                  },
                  "points": { "type": "number", "example": 120 }
                }
              }
            }
          }
        }
      }
    },
    "/loyalty/{id}": {
      "put": {
        "tags": ["Loyalty"],
        "summary": "Update loyalty points (Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": { "points": { "type": "number", "example": 150 } }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loyalty points updated",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1loyal1234567" },
                "user": { "type": "string", "example": "64f1abc1234567" },
                "shop": { "type": "string", "example": "64f1shop1234567" },
                "points": { "type": "number", "example": 150 }
              }
            }
          }
        }
      }
    },
    "/vouchers/": {
      "post": {
        "tags": ["Vouchers"],
        "summary": "Create a voucher (Seller/Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["code", "discount", "minOrder", "expiryDate"],
              "properties": {
                "code": { "type": "string", "example": "WELCOME10" },
                "discount": { "type": "number", "example": 10 },
                "minOrder": { "type": "number", "example": 50 },
                "expiryDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2025-12-31"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Voucher created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1voucher1234567" },
                "shop": { "type": "string", "example": "64f1shop1234567" },
                "code": { "type": "string", "example": "WELCOME10" },
                "discount": { "type": "number", "example": 10 },
                "minOrder": { "type": "number", "example": 50 },
                "expiryDate": {
                  "type": "string",
                  "example": "2025-12-31T00:00:00.000Z"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Vouchers"],
        "summary": "Get all vouchers (Admin only)",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of all vouchers",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "64f1voucher1234567" },
                  "shop": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "example": "Coffee Shop" },
                      "email": {
                        "type": "string",
                        "example": "coffee@example.com"
                      }
                    }
                  },
                  "code": { "type": "string", "example": "WELCOME10" },
                  "discount": { "type": "number", "example": 10 }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/mine": {
      "get": {
        "tags": ["Vouchers"],
        "summary": "Get vouchers created by the current seller (Seller/Admin only)",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of seller vouchers",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "64f1voucher1234567" },
                  "code": { "type": "string", "example": "WELCOME10" },
                  "discount": { "type": "number", "example": 10 }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/shop/{shopId}": {
      "get": {
        "tags": ["Vouchers"],
        "summary": "Get active vouchers for a shop",
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "type": "string",
            "example": "64f1shop1234567"
          }
        ],
        "responses": {
          "200": {
            "description": "List of shop vouchers",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "64f1voucher1234567" },
                  "code": { "type": "string", "example": "WELCOME10" },
                  "discount": { "type": "number", "example": 10 },
                  "expiryDate": {
                    "type": "string",
                    "example": "2025-12-31T00:00:00.000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/apply": {
      "post": {
        "tags": ["Vouchers"],
        "summary": "Apply voucher to an order",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["code", "shopId", "orderTotal"],
              "properties": {
                "code": { "type": "string", "example": "WELCOME10" },
                "shopId": { "type": "string", "example": "64f1shop1234567" },
                "orderTotal": { "type": "number", "example": 100 }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Voucher applied successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": true },
                "discountAmount": { "type": "number", "example": 10 }
              }
            }
          }
        }
      }
    },
    "/vouchers/{id}": {
      "delete": {
        "tags": ["Vouchers"],
        "summary": "Delete voucher (Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "example": "64f1voucher1234567"
          }
        ],
        "responses": {
          "200": {
            "description": "Voucher deleted",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Voucher deleted" }
              }
            }
          }
        }
      }
    },
    "/notifications/me": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Get current user notifications",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of user notifications",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "64f1noti1234567" },
                  "message": {
                    "type": "string",
                    "example": "Your order has been shipped"
                  },
                  "type": { "type": "string", "example": "order" },
                  "read": { "type": "boolean", "example": false },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-10-20T06:12:34.000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}/read": {
      "put": {
        "tags": ["Notifications"],
        "summary": "Mark notification as read",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "example": "64f1noti1234567"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification marked as read",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "64f1noti1234567" },
                "message": {
                  "type": "string",
                  "example": "Your order has been shipped"
                },
                "read": { "type": "boolean", "example": true }
              }
            }
          }
        }
      }
    },
    "/products/": {
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product (Seller/Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["name", "price", "categoryId"],
              "properties": {
                "name": { "type": "string", "example": "Iced Latte" },
                "price": { "type": "number", "example": 3.5 },
                "description": {
                  "type": "string",
                  "example": "Cold espresso with milk"
                },
                "categoryId": { "type": "string", "example": "64f1cde1234567" },
                "imageUrl": {
                  "type": "string",
                  "example": "https://cdn.4foods.app/images/latte.jpg"
                },
                "videoUrl": {
                  "type": "string",
                  "example": "https://youtu.be/example"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "6501prod1234567" },
                "name": { "type": "string", "example": "Iced Latte" },
                "price": { "type": "number", "example": 3.5 },
                "description": {
                  "type": "string",
                  "example": "Cold espresso with milk"
                },
                "category": { "type": "string", "example": "64f1cde1234567" },
                "imageUrl": {
                  "type": "string",
                  "example": "https://cdn.4foods.app/images/latte.jpg"
                },
                "videoUrl": {
                  "type": "string",
                  "example": "https://youtu.be/example"
                },
                "sellerId": { "type": "string", "example": "64f1abc1234567" },
                "createdAt": {
                  "type": "string",
                  "example": "2025-10-23T07:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Validation error (missing/invalid fields)",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Name, price, and category are required"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (not seller/admin)",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Only sellers or admins can add products"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Server error" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Products"],
        "summary": "Get all products (supports filters)",
        "parameters": [
          {
            "in": "query",
            "name": "keyword",
            "type": "string",
            "description": "Search in product name",
            "example": "latte"
          },
          {
            "in": "query",
            "name": "categoryId",
            "type": "string",
            "example": "64f1cde1234567"
          },
          {
            "in": "query",
            "name": "minPrice",
            "type": "number",
            "example": 1.0
          },
          {
            "in": "query",
            "name": "maxPrice",
            "type": "number",
            "example": 10.0
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "6501prod1234567" },
                  "name": { "type": "string", "example": "Iced Latte" },
                  "price": { "type": "number", "example": 3.5 },
                  "description": {
                    "type": "string",
                    "example": "Cold espresso with milk"
                  },
                  "category": {
                    "type": "object",
                    "properties": {
                      "_id": { "type": "string", "example": "64f1cde1234567" },
                      "name": { "type": "string", "example": "Beverages" }
                    }
                  },
                  "imageUrl": {
                    "type": "string",
                    "example": "https://cdn.4foods.app/images/latte.jpg"
                  },
                  "videoUrl": {
                    "type": "string",
                    "example": "https://youtu.be/example"
                  },
                  "sellerId": { "type": "string", "example": "64f1abc1234567" }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Server error" }
              }
            }
          }
        }
      }
    },

    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Product detail",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "6501prod1234567" },
                "name": { "type": "string", "example": "Iced Latte" },
                "price": { "type": "number", "example": 3.5 },
                "description": {
                  "type": "string",
                  "example": "Cold espresso with milk"
                },
                "category": {
                  "type": "object",
                  "properties": {
                    "_id": { "type": "string", "example": "64f1cde1234567" },
                    "name": { "type": "string", "example": "Beverages" }
                  }
                },
                "imageUrl": {
                  "type": "string",
                  "example": "https://cdn.4foods.app/images/latte.jpg"
                },
                "videoUrl": {
                  "type": "string",
                  "example": "https://youtu.be/example"
                },
                "sellerId": { "type": "string", "example": "64f1abc1234567" }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Product not found" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Server error" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update product by ID (Seller can update own product, Admin can update any)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Iced Latte - Large" },
                "price": { "type": "number", "example": 4.0 },
                "description": {
                  "type": "string",
                  "example": "Updated description"
                },
                "categoryId": { "type": "string", "example": "64f1cde1234567" },
                "imageUrl": {
                  "type": "string",
                  "example": "https://cdn.4foods.app/images/latte-large.jpg"
                },
                "videoUrl": {
                  "type": "string",
                  "example": "https://youtu.be/example2"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated product",
            "schema": {
              "type": "object",
              "properties": {
                "_id": { "type": "string", "example": "6501prod1234567" },
                "name": { "type": "string", "example": "Iced Latte - Large" },
                "price": { "type": "number", "example": 4.0 },
                "description": {
                  "type": "string",
                  "example": "Updated description"
                },
                "category": {
                  "type": "object",
                  "properties": {
                    "_id": { "type": "string", "example": "64f1cde1234567" },
                    "name": { "type": "string", "example": "Beverages" }
                  }
                },
                "imageUrl": {
                  "type": "string",
                  "example": "https://cdn.4foods.app/images/latte-large.jpg"
                },
                "videoUrl": {
                  "type": "string",
                  "example": "https://youtu.be/example2"
                },
                "sellerId": { "type": "string", "example": "64f1abc1234567" }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Invalid category ID" }
              }
            }
          },
          "403": {
            "description": "Forbidden (not owner)",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "You can only update your own products"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Product not found" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Server error" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete product by ID (Seller can delete own product, Admin can delete any)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "Product deleted",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Product deleted successfully"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (not owner)",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "You can only delete your own products"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Product not found" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Server error" }
              }
            }
          }
        }
      }
    },
    "/notifications/": {
      "post": {
        "tags": ["Notifications"],
        "summary": "Send a notification to a user or broadcast to all users (Admin only)",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["message"],
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "Optional: target single user. If omitted, notification will be broadcast to all users",
                  "example": "64f1abc1234567"
                },
                "message": {
                  "type": "string",
                  "example": "Big sale today: 20% off all drinks"
                },
                "type": { "type": "string", "example": "promo" },
                "metadata": {
                  "type": "object",
                  "example": {
                    "shopId": "64f1shop1234567",
                    "voucherCode": "SALE20"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification result",
            "schema": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "_id": { "type": "string", "example": "6501noti1234567" },
                    "user": { "type": "string", "example": "64f1abc1234567" },
                    "message": {
                      "type": "string",
                      "example": "Big sale today: 20% off all drinks"
                    },
                    "type": { "type": "string", "example": "promotion" },
                    "metadata": {
                      "type": "object",
                      "example": {
                        "shopId": "64f1shop1234567",
                        "voucherCode": "SALE20"
                      }
                    },
                    "read": { "type": "boolean", "example": false },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-10-23T07:10:00.000Z"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Notification sent to all users"
                    }
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden (not admin)",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Forbidden" }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "Server error" }
              }
            }
          }
        },
        "x-examples": {
          "single_user": {
            "summary": "Send to a single user",
            "value": {
              "userId": "64f1abc1234567",
              "message": "You have a new voucher",
              "type": "system",
              "metadata": {}
            }
          },
          "broadcast": {
            "summary": "Broadcast to all users (omit userId)",
            "value": {
              "message": "Flash sale starts now! 30% off",
              "type": "promotion",
              "metadata": { "shopId": "64f1shop1234567" }
            }
          }
        }
      },
      "get": {
        "tags": ["Notifications"],
        "summary": "Get all notifications (Admin only)",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "List of all notifications",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": { "type": "string", "example": "64f1noti1234567" },
                  "user": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "example": "Triet Do" },
                      "email": {
                        "type": "string",
                        "example": "triet@example.com"
                      }
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Promotion 10% off"
                  },
                  "read": { "type": "boolean", "example": false }
                }
              }
            }
          }
        }
      }
    }
  }
}
