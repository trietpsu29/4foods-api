{
  "swagger": "2.0",
  "info": {
    "title": "4Foods API",
    "description": "API documentation for the 4Foods Android app",
    "version": "1.0.0"
  },
  "host": "api.4foods.app",
  "basePath": "/",
  "schemes": ["https"],
  "tags": [
    {
      "name": "Auth",
      "description": "User authentication and password management"
    },
    { "name": "Users", "description": "User profiles and account management" },
    { "name": "Products", "description": "Product catalog management" },
    { "name": "Orders", "description": "Customer orders and status" },
    { "name": "Categories", "description": "Product categories" },
    { "name": "Carts", "description": "Shopping cart operations" }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "example": "John Doe" },
                "email": { "example": "john@example.com" },
                "password": { "example": "123456" },
                "role": { "example": "customer" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "User created successfully" },
          "400": { "description": "Bad Request" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login to get JWT token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": { "example": "john@example.com" },
                "password": { "example": "123456" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Login successful, returns JWT token" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Request password reset code",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": { "example": "john@example.com" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Reset code sent" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset password using code",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": { "example": "john@example.com" },
                "code": { "example": "ABC123" },
                "newPassword": { "example": "newpass123" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Password reset successful" },
          "400": { "description": "Invalid or expired code" }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user profile",
        "parameters": [
          { "name": "Authorization", "in": "header", "type": "string" }
        ],
        "responses": {
          "200": { "description": "User profile returned" },
          "401": { "description": "Unauthorized" }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update current user profile",
        "parameters": [
          { "name": "Authorization", "in": "header", "type": "string" },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "example": "Triet Do" },
                "email": { "example": "triet@example.com" },
                "phone": { "example": "0123456789" },
                "avatar": { "example": "https://..." }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Profile updated" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/users/change-password": {
      "put": {
        "tags": ["Users"],
        "summary": "Change current user's password",
        "parameters": [
          { "name": "Authorization", "in": "header", "type": "string" },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": { "example": "123456" },
                "newPassword": { "example": "newpass123" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Password changed" },
          "400": { "description": "Invalid password" }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users (admin only)",
        "parameters": [
          { "name": "Authorization", "in": "header", "type": "string" }
        ],
        "responses": {
          "200": { "description": "Users list returned" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID (admin only)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "200": { "description": "User found" } }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user by ID (admin only)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "200": { "description": "User updated" } }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user by ID (admin only)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": { "200": { "description": "User deleted" } }
      }
    },
    "/products/": {
      "post": {
        "tags": ["Products"],
        "summary": "Create new product"
      },
      "get": {
        "tags": ["Products"],
        "summary": "Get all products"
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID"
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update product by ID"
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete product by ID"
      }
    },
    "/orders/": {
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order"
      },
      "get": {
        "tags": ["Orders"],
        "summary": "Get all orders"
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order by ID"
      },
      "put": {
        "tags": ["Orders"],
        "summary": "Update order by ID"
      },
      "delete": {
        "tags": ["Orders"],
        "summary": "Delete order by ID"
      }
    },
    "/categories/": {
      "post": {
        "tags": ["Categories"],
        "summary": "Create new category"
      },
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories"
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get category by ID"
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update category by ID"
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete category by ID"
      }
    },
    "/carts/": {
      "post": {
        "tags": ["Carts"],
        "summary": "Add item to cart"
      },
      "get": {
        "tags": ["Carts"],
        "summary": "Get all carts"
      }
    },
    "/carts/{id}": {
      "get": {
        "tags": ["Carts"],
        "summary": "Get cart by ID"
      },
      "put": {
        "tags": ["Carts"],
        "summary": "Update cart by ID"
      },
      "delete": {
        "tags": ["Carts"],
        "summary": "Delete cart by ID"
      }
    }
  }
}
